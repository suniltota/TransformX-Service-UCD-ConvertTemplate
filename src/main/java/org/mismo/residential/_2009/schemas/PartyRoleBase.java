//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.12.01 at 06:02:48 PM IST 
//


package org.mismo.residential._2009.schemas;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PartyRoleBase.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PartyRoleBase">
 *   &lt;restriction base="{http://www.mismo.org/residential/2009/schemas}MISMOEnum_Base">
 *     &lt;enumeration value="Borrower"/>
 *     &lt;enumeration value="ClosingAgent"/>
 *     &lt;enumeration value="LoanDeliveryFilePreparer"/>
 *     &lt;enumeration value="MortgageBroker"/>
 *     &lt;enumeration value="NonTitleSpouse"/>
 *     &lt;enumeration value="NotePayTo"/>
 *     &lt;enumeration value="Other"/>
 *     &lt;enumeration value="PropertySeller"/>
 *     &lt;enumeration value="RealEstateAgent"/>
 *     &lt;enumeration value="TitleHolder"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "PartyRoleBase")
@XmlEnum
public enum PartyRoleBase {

    @XmlEnumValue("Borrower")
    BORROWER("Borrower"),
    @XmlEnumValue("ClosingAgent")
    CLOSING_AGENT("ClosingAgent"),
    @XmlEnumValue("LoanDeliveryFilePreparer")
    LOAN_DELIVERY_FILE_PREPARER("LoanDeliveryFilePreparer"),
    @XmlEnumValue("MortgageBroker")
    MORTGAGE_BROKER("MortgageBroker"),

    /**
     * Individual associated with the borrower, usually the spouse, who is not obligated on the loan nor are they a title holder on the subject property. Nevertheless they have certain rights with regard to the loan and disposition of the property.
     * 
     */
    @XmlEnumValue("NonTitleSpouse")
    NON_TITLE_SPOUSE("NonTitleSpouse"),
    @XmlEnumValue("NotePayTo")
    NOTE_PAY_TO("NotePayTo"),
    @XmlEnumValue("Other")
    OTHER("Other"),
    @XmlEnumValue("PropertySeller")
    PROPERTY_SELLER("PropertySeller"),
    @XmlEnumValue("RealEstateAgent")
    REAL_ESTATE_AGENT("RealEstateAgent"),
    @XmlEnumValue("TitleHolder")
    TITLE_HOLDER("TitleHolder");
    private final String value;

    PartyRoleBase(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PartyRoleBase fromValue(String v) {
        for (PartyRoleBase c: PartyRoleBase.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
