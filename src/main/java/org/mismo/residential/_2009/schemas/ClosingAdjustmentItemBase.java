//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.12.01 at 06:02:48 PM IST 
//


package org.mismo.residential._2009.schemas;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ClosingAdjustmentItemBase.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ClosingAdjustmentItemBase">
 *   &lt;restriction base="{http://www.mismo.org/residential/2009/schemas}MISMOEnum_Base">
 *     &lt;enumeration value="FuelCosts"/>
 *     &lt;enumeration value="Gift"/>
 *     &lt;enumeration value="Grant"/>
 *     &lt;enumeration value="Other"/>
 *     &lt;enumeration value="ProceedsOfSubordinateLiens"/>
 *     &lt;enumeration value="RebateCredit"/>
 *     &lt;enumeration value="RelocationFunds"/>
 *     &lt;enumeration value="RepairCompletionEscrowHoldback"/>
 *     &lt;enumeration value="Repairs"/>
 *     &lt;enumeration value="SellerCredit"/>
 *     &lt;enumeration value="SellersEscrowAssumption"/>
 *     &lt;enumeration value="SellersMortgageInsuranceAssumption"/>
 *     &lt;enumeration value="SweatEquity"/>
 *     &lt;enumeration value="TenantSecurityDeposit"/>
 *     &lt;enumeration value="TradeEquity"/>
 *     &lt;enumeration value="UnpaidUtilityEscrowHoldback"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ClosingAdjustmentItemBase")
@XmlEnum
public enum ClosingAdjustmentItemBase {


    /**
     * The value of any fuel stored on the subject property that may be transferred to a subsequent owner.
     * 
     */
    @XmlEnumValue("FuelCosts")
    FUEL_COSTS("FuelCosts"),

    /**
     * Funds or equity provided as a personal gift to the borrower at the time of closing that does not require repayment.
     * 
     */
    @XmlEnumValue("Gift")
    GIFT("Gift"),

    /**
     * Amount paid on behalf of the borrower toward down payment and/or closing costs by a religious organization, municipality, non-profit organization (excluding credit unions) or public agency that does not require repayment.
     * 
     */
    @XmlEnumValue("Grant")
    GRANT("Grant"),
    @XmlEnumValue("Other")
    OTHER("Other"),

    /**
     * Dollar amount of proceeds from a subordinate lien secured by the subject property that are being applied to the subject transaction (may be less than the full note loan amount).
     * 
     */
    @XmlEnumValue("ProceedsOfSubordinateLiens")
    PROCEEDS_OF_SUBORDINATE_LIENS("ProceedsOfSubordinateLiens"),

    /**
     * A premium in the form of cash, services or merchandise to the consumer to reduce the cost otherwise borne by the consumer.
     * 
     */
    @XmlEnumValue("RebateCredit")
    REBATE_CREDIT("RebateCredit"),

    /**
     * Funds provided to relocating borrower (usually by employer) to offset some of the initial or ongoing costs of borrower's home at the new location.
     * 
     */
    @XmlEnumValue("RelocationFunds")
    RELOCATION_FUNDS("RelocationFunds"),

    /**
     * Amount of funds held by lender or servicer to be disbursed when repairs, construction or other improvements are completed on the subject property.
     * 
     */
    @XmlEnumValue("RepairCompletionEscrowHoldback")
    REPAIR_COMPLETION_ESCROW_HOLDBACK("RepairCompletionEscrowHoldback"),

    /**
     * Repairs made to the subject property and agreed to between the buyer and the seller in a real estate transaction.
     * 
     */
    @XmlEnumValue("Repairs")
    REPAIRS("Repairs"),

    /**
     * A lump sum amount from the property seller to the borrower toward closing costs or where the property seller is making an allowance to the consumer for items to purchase separately. 
     * 
     */
    @XmlEnumValue("SellerCredit")
    SELLER_CREDIT("SellerCredit"),

    /**
     * Any transferred escrow balance from the seller to the borrower.
     * 
     */
    @XmlEnumValue("SellersEscrowAssumption")
    SELLERS_ESCROW_ASSUMPTION("SellersEscrowAssumption"),

    /**
     * The value of the current mortgage insurance policy being transferred from property seller to borrower.
     * 
     */
    @XmlEnumValue("SellersMortgageInsuranceAssumption")
    SELLERS_MORTGAGE_INSURANCE_ASSUMPTION("SellersMortgageInsuranceAssumption"),

    /**
     * The value of borrower's labor and/or cost of materials contributed by the borrower in construction or renovation to subject property in lieu of some portion of the cash purchase price of the subject property.
     * 
     */
    @XmlEnumValue("SweatEquity")
    SWEAT_EQUITY("SweatEquity"),

    /**
     * Amount of security deposit paid by a tenant to a property seller that is transferrable to the borrower purchasing the subject property.
     * 
     */
    @XmlEnumValue("TenantSecurityDeposit")
    TENANT_SECURITY_DEPOSIT("TenantSecurityDeposit"),

    /**
     * Amount of value exchanged when property seller and buyer are trading equity in other real property in lieu of some portion of the cash purchase price of the subject property. IRS 1031 Tax Exchange is one type.
     * 
     */
    @XmlEnumValue("TradeEquity")
    TRADE_EQUITY("TradeEquity"),

    /**
     * Amount of funds held by lender or servicer to be disbursed to pay unpaid utilities on the subject property that have not been billed as of the closing date.
     * 
     */
    @XmlEnumValue("UnpaidUtilityEscrowHoldback")
    UNPAID_UTILITY_ESCROW_HOLDBACK("UnpaidUtilityEscrowHoldback");
    private final String value;

    ClosingAdjustmentItemBase(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ClosingAdjustmentItemBase fromValue(String v) {
        for (ClosingAdjustmentItemBase c: ClosingAdjustmentItemBase.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
