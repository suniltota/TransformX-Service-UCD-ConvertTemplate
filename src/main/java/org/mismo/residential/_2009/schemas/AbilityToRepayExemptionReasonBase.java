//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.12.01 at 06:02:48 PM IST 
//


package org.mismo.residential._2009.schemas;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for AbilityToRepayExemptionReasonBase.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="AbilityToRepayExemptionReasonBase">
 *   &lt;restriction base="{http://www.mismo.org/residential/2009/schemas}MISMOEnum_Base">
 *     &lt;enumeration value="LoanProgram"/>
 *     &lt;enumeration value="PropertyUsage"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "AbilityToRepayExemptionReasonBase")
@XmlEnum
public enum AbilityToRepayExemptionReasonBase {


    /**
     * Indicates that transaction is exempt from Regulation Z ability-to-repay requirements because the loan program is exempt from requirements.
     * 
     */
    @XmlEnumValue("LoanProgram")
    LOAN_PROGRAM("LoanProgram"),

    /**
     * Indicates that transaction is exempt from Regulation Z ability-to-repay requirements because the occupancy type for the property is exempt from requirements.
     * 
     */
    @XmlEnumValue("PropertyUsage")
    PROPERTY_USAGE("PropertyUsage");
    private final String value;

    AbilityToRepayExemptionReasonBase(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static AbilityToRepayExemptionReasonBase fromValue(String v) {
        for (AbilityToRepayExemptionReasonBase c: AbilityToRepayExemptionReasonBase.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
