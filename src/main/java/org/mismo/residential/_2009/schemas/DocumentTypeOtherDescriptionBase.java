//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.12.01 at 06:02:48 PM IST 
//


package org.mismo.residential._2009.schemas;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DocumentTypeOtherDescriptionBase.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DocumentTypeOtherDescriptionBase">
 *   &lt;restriction base="{http://www.mismo.org/residential/2009/schemas}MISMOEnum_Base">
 *     &lt;enumeration value="ClosingDisclosure:AlternateForm"/>
 *     &lt;enumeration value="ClosingDisclosure:BorrowerOnly"/>
 *     &lt;enumeration value="ClosingDisclosure:ModelForm"/>
 *     &lt;enumeration value="ClosingDisclosure:SellerOnly"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "DocumentTypeOtherDescriptionBase")
@XmlEnum
public enum DocumentTypeOtherDescriptionBase {

    @XmlEnumValue("ClosingDisclosure:AlternateForm")
    CLOSING_DISCLOSURE_ALTERNATE_FORM("ClosingDisclosure:AlternateForm"),
    @XmlEnumValue("ClosingDisclosure:BorrowerOnly")
    CLOSING_DISCLOSURE_BORROWER_ONLY("ClosingDisclosure:BorrowerOnly"),
    @XmlEnumValue("ClosingDisclosure:ModelForm")
    CLOSING_DISCLOSURE_MODEL_FORM("ClosingDisclosure:ModelForm"),
    @XmlEnumValue("ClosingDisclosure:SellerOnly")
    CLOSING_DISCLOSURE_SELLER_ONLY("ClosingDisclosure:SellerOnly");
    private final String value;

    DocumentTypeOtherDescriptionBase(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DocumentTypeOtherDescriptionBase fromValue(String v) {
        for (DocumentTypeOtherDescriptionBase c: DocumentTypeOtherDescriptionBase.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
