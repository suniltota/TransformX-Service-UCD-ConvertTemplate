//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.12.01 at 06:02:48 PM IST 
//


package org.mismo.residential._2009.schemas;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PrepaidItemPerDiemCalculationMethodBase.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PrepaidItemPerDiemCalculationMethodBase">
 *   &lt;restriction base="{http://www.mismo.org/residential/2009/schemas}MISMOEnum_Base">
 *     &lt;enumeration value="360"/>
 *     &lt;enumeration value="365"/>
 *     &lt;enumeration value="365Or366"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "PrepaidItemPerDiemCalculationMethodBase")
@XmlEnum
public enum PrepaidItemPerDiemCalculationMethodBase {


    /**
     * Prepaid Item Per Diem Calculation Method Type Definition: The number of days in the year used in calculating the dollar amount charged per day for the prepaid item per diem amount.
     * 
     */
    @XmlEnumValue("360")
    THREESIXTY("360"),
    @XmlEnumValue("365")
    THREESIXTYFIVE("365"),
    @XmlEnumValue("365Or366")
    THREESIXTY_OR_THREESIXTYFIVE("365Or366");
    
    private final String value;

    PrepaidItemPerDiemCalculationMethodBase(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PrepaidItemPerDiemCalculationMethodBase fromValue(String v) {
        for (PrepaidItemPerDiemCalculationMethodBase c: PrepaidItemPerDiemCalculationMethodBase.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
