//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.12.01 at 06:02:48 PM IST 
//


package org.mismo.residential._2009.schemas;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;


/**
 * Specifies whether negative amortization is scheduled or potential on the loan. Negative amortization is unpaid interest added to the mortgage principal. This applies to loans where the principal balance increases because the payments do not cover the interest.
 * 
 * <p>Java class for NegativeAmortizationEnum complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="NegativeAmortizationEnum">
 *   &lt;simpleContent>
 *     &lt;extension base="&lt;http://www.mismo.org/residential/2009/schemas>NegativeAmortizationBase">
 *     &lt;/extension>
 *   &lt;/simpleContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "NegativeAmortizationEnum", propOrder = {
    "value"
})
public class NegativeAmortizationEnum {

    @XmlValue
    protected NegativeAmortizationBase value;

    /**
     * Term: Negative Amortization Type Definition: Specifies whether negative amortization is scheduled or potential on the loan. Negative amortization is unpaid interest added to the mortgage principal. This applies to loans where the principal balance increases because the payments do not cover the interest.
     * 
     * @return
     *     possible object is
     *     {@link NegativeAmortizationBase }
     *     
     */
    public NegativeAmortizationBase getValue() {
        return value;
    }

    /**
     * Sets the value of the value property.
     * 
     * @param value
     *     allowed object is
     *     {@link NegativeAmortizationBase }
     *     
     */
    public void setValue(NegativeAmortizationBase value) {
        this.value = value;
    }

}
